'use strict';

var _globalVars = require('./metal/global-vars');

var _globalVars2 = _interopRequireDefault(_globalVars);

var _isNodeLikeEnvironment = require('./metal/is-node-like-environment');

var _isNodeLikeEnvironment2 = _interopRequireDefault(_isNodeLikeEnvironment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* globals require */

if ((0, _isNodeLikeEnvironment2['default'])()) {
  /* this indirection is needed because babel throws errors when
   * transpiling require('node-fetch') using `amd` plugin with babel6
   */
  var localRequire = require;
  var fetch = localRequire('node-fetch');

  _globalVars2['default'].set('fetch', fetch);
  _globalVars2['default'].set('Response', fetch.Response);
}